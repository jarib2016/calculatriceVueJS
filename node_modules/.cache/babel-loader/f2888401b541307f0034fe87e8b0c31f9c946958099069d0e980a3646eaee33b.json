{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-70c32fdc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"App\"\n};\nconst _hoisted_2 = {\n  class: \"calculator\"\n};\nconst _hoisted_3 = {\n  class: \"display\"\n};\nconst _hoisted_4 = {\n  class: \"operators\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"digits\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \".\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"=\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", null, _toDisplayString(_ctx.calculatorValue || 0), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.operate, number => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: number,\n      onClick: $event => _ctx.action(number)\n    }, _toDisplayString(number), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.digits, number => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: number,\n      onClick: $event => _ctx.action(number)\n    }, _toDisplayString(number), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_8, _hoisted_9])])]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAS;;EAGfA,KAAK,EAAC;AAAW;;;EAIjBA,KAAK,EAAC;AAAQ;;gEAEjBC,oBAAmB,gBAAV,GAAC;gEACVA,oBAAmB,gBAAV,GAAC;;;uBAZhBC,oBAeM,OAfNC,UAeM,GAdJF,oBAaM,OAbNG,UAaM,GAZJH,oBAEM,OAFNI,UAEM,GADJJ,oBAAsC,+BAA9BK,oBAAe,yBAEzBL,oBAEM,OAFNM,UAEM,sBADJL,oBAA2FM,6BAAlEF,YAAO,EAAjBG,MAAM;yBAArBP,oBAA2F;MAAxDQ,GAAG,EAAED,MAAM;MAAGE,OAAK,YAAEL,WAAM,CAACG,MAAM;wBAAKA,MAAM;oCAGlFR,oBAIM,OAJNW,UAIM,sBAHJV,oBAA4FM,6BAAnEF,WAAM,EAAhBG,MAAM;yBAArBP,oBAA4F;MAA1DQ,GAAG,EAAED,MAAM;MAAGE,OAAK,YAAEL,WAAM,CAACG,MAAM;wBAAMA,MAAM;kCAChFI,UAAmB,EACnBC,UAAmB","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_ctx","_hoisted_4","_Fragment","number","key","onClick","_hoisted_6","_hoisted_8","_hoisted_9"],"sourceRoot":"","sources":["C:\\Users\\JaribEzechias\\calc-app\\src\\components\\calculator.vue"],"sourcesContent":["<template>\n  <div class=\"App\">\n    <div class=\"calculator\">\n      <div class=\"display\">\n        <span>{{calculatorValue || 0 }}</span>\n      </div>\n      <div class=\"operators\" >\n        <button v-for=\"number in operate\" :key=\"number\" @click=\"action(number)\">{{number}}</button>\n      </div>\n\n      <div class=\"digits\">\n        <button v-for=\"number in digits\" :key=\"number\" @click=\"action(number)\">{{ number }}</button>\n        <button >.</button>\n        <button >=</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n\n  data(){\n    return{\n      calculatorValue: '',\n      operate:['/', '*', '+', '-', '.', 'del', '='],\n      digits: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n      oparat: null,\n    }\n  },\n\n  methods:{\n    action(number){\n      if (!isNaN(number) || number==='.'){\n        this.calculatorValue += number + '';\n      }\n\n      if (number === 'del'){\n        this.calculatorValue = '';\n      }\n\n      if ([])\n    }\n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n:root{\n  --primary: red;\n  --secondary: blue;\n  --dark: black;\n  --light: white;\n}\n*{\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'Fira Sans',sans-serif;\n}\nbody{\n  background-color: var(--light);\n}\n.App{\n  display: flex;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n}\n.calculator{\n  width: 100%;\n  max-width: 400px;\n  background-color: aliceblue;\n  border-radius: 16px;\n  overflow: hidden;\n  box-shadow: 0px 2px 64px rgba(0, 0, 0, 0.2);\n}\n\n.display{\n  padding: 16px;\n  text-align: right;\n  background-color: black;\n  color: var(--light);\n  font-size: 25px;\n  font-weight: 300;\n}\n.display span{\n  font-size: 14px;\n  color: white;\n}\n\nbutton{\n  appearance: none;\n  border: none;\n  outline: none;\n  color: white;\n  font-size: 15px;\n  padding: 10px;\n  cursor: pointer;\n  transition: 0.7s;\n}\n\nbutton:hover{\n  opacity: 0.4;\n}\n\n.operators{\n  display: flex;\n}\n.operators button{\n  flex: 1 1 0%;\n  background-color: darkorange;\n  font-weight: 700;\n}\n\n.digits{\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.digits button{\n  flex: 1 1 33.333%;\n  max-width: 33.333%;\n  background-color: black;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}