{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-70c32fdc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  className: \"App\"\n};\nconst _hoisted_2 = {\n  className: \"calculator\"\n};\nconst _hoisted_3 = {\n  className: \"display\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  className: \"digits\"\n}, [/*#__PURE__*/_createTextVNode(\" {createDigits()} \"), /*#__PURE__*/_createElementVNode(\"button\", null, \"0\"), /*#__PURE__*/_createElementVNode(\"button\", null, \".\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  onClick: \"{calculate}\"\n}, \"=\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", null, _toDisplayString($data.calculatorValue || 0), 1 /* TEXT */)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.operate, n => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      className: \"operators\",\n      key: n\n    }, _toDisplayString(n), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_4])]);\n}","map":{"version":3,"mappings":";;;EACOA,SAAS,EAAC;AAAK;;EACbA,SAAS,EAAC;AAAY;;EACpBA,SAAS,EAAC;AAAS;gEAOxBC,oBAKM;EALDD,SAAS,EAAC;AAAQ,kCAAC,oBAEtB,oCAAmB,gBAAV,GAAC,gBACVC,oBAAmB,gBAAV,GAAC,gBACVA,oBAAuC;EAA/BC,OAAO,EAAC;AAAW,GAAE,GAAC;;;uBAbpCC,oBAgBM,OAhBNC,UAgBM,GAfJH,oBAcM,OAdNI,UAcM,GAbJJ,oBAEM,OAFNK,UAEM,GADJL,oBAAsC,+BAA9BM,qBAAe,4CAEzBJ,oBAEMK,6BAFiCD,aAAO,EAAZE,CAAC;yBAAnCN,oBAEM;MAFDH,SAAS,EAAC,WAAW;MAAuBU,GAAG,EAAED;wBAClDA,CAAC;kCAGLE,UAKM","names":["className","_createElementVNode","onClick","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$data","_Fragment","n","key","_hoisted_4"],"sourceRoot":"","sources":["C:\\Users\\JaribEzechias\\calc-app\\src\\components\\calculator.vue"],"sourcesContent":["<template>\n  <div className=\"App\">\n    <div className=\"calculator\">\n      <div className=\"display\">\n        <span>{{calculatorValue || 0 }}</span>\n      </div>\n      <div className=\"operators\" v-for=\"n in operate\" :key=\"n\">\n        {{n}}\n      </div>\n\n      <div className=\"digits\">\n        {createDigits()}\n        <button >0</button>\n        <button >.</button>\n        <button onClick={calculate} >=</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n\n  data(){\n    return{\n      calculatorValue: '',\n      operate:['/', '*', '+', '-', '.'],\n    }\n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n:root{\n  --primary: red;\n  --secondary: blue;\n  --dark: black;\n  --light: white;\n}\n*{\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'Fira Sans',sans-serif;\n}\nbody{\n  background-color: var(--light);\n}\n.App{\n  display: flex;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n}\n.calculator{\n  width: 100%;\n  max-width: 400px;\n  background-color: aliceblue;\n  border-radius: 16px;\n  overflow: hidden;\n  box-shadow: 0px 2px 64px rgba(0, 0, 0, 0.2);\n}\n\n.display{\n  padding: 16px;\n  text-align: right;\n  background-color: black;\n  color: var(--light);\n  font-size: 25px;\n  font-weight: 300;\n}\n.display span{\n  font-size: 14px;\n  color: #888;\n}\n\nbutton{\n  appearance: none;\n  border: none;\n  outline: none;\n  color: white;\n  font-size: 20px;\n  padding: 16px;\n  cursor: pointer;\n  transition: 0.4s;\n}\n\nbutton:hover{\n  opacity: 0.9;\n}\n\n.operators{\n  display: flex;\n}\n.operators button{\n  flex: 1 1 0%;\n  background-color: var(--secondary);\n  font-weight: 700;\n}\n\n.digits{\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.digits button{\n  flex: 1 1 33.333%;\n  max-width: 33.333%;\n  background-color: var(--dark);\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}